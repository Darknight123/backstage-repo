name: Docker Image Create-Update-Publish-Deploy

on:
  push:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
jobs:
  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
    - name: set lower case owner name
      run: |
        echo "github_owner=`echo ${{github.actor}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
    - name: set image name
      run: |
        echo "IMAGE_NAME=`echo ${{ env.github_owner }}/hello-world:latest`" >>${GITHUB_ENV}
    - uses: actions/checkout@v3
    - name: Login
      run: |
        echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build the Docker image and Publish
      run: |
        docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    - name: set lower case owner name
      run: |
        echo "github_owner=`echo ${{github.actor}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
    - name: set image name
      run: |
        echo "IMAGE_NAME=`echo ${{ env.github_owner }}/hello-world:latest`" >>${GITHUB_ENV}
    - name: install ssh keys
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa
        ssh-keyscan -H ${{secrets.SSH_HOST }} > ~/.ssh/known_hosts
        cat ~/.ssh/known_hosts
    - name: connect it and publish
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} && docker run -it -p 80:80 ${{ env.IMAGE_NAME }}"
    - name: cleanup step
      run: rm -rf ~/.ssh
  
